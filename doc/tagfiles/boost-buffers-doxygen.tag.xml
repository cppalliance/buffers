<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<tagfile>
<compound kind="namespace">
  <name>boost::buffers</name>
  <filename>boost/buffers.adoc</filename>
  <class kind="class">boost::buffers::slice_type</class>
  <class kind="class">boost::buffers::void_t</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::&lt;unnamed record&gt;</class>
  <class kind="class">boost::buffers::circular_buffer</class>
  <class kind="class">boost::buffers::const_buffer</class>
  <class kind="class">boost::buffers::const_buffer_pair</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_const_buffer_sequence</class>
  <class kind="class">boost::buffers::is_mutable_buffer_sequence</class>
  <class kind="class">boost::buffers::is_mutable_buffer_sequence</class>
  <class kind="class">boost::buffers::is_mutable_buffer_sequence</class>
  <class kind="class">boost::buffers::is_mutable_buffer_sequence</class>
  <class kind="class">boost::buffers::is_mutable_buffer_sequence</class>
  <class kind="class">boost::buffers::is_mutable_buffer_sequence</class>
  <class kind="class">boost::buffers::make_void</class>
  <class kind="class">boost::buffers::mutable_buffer</class>
  <class kind="class">boost::buffers::mutable_buffer_pair</class>
  <class kind="class">boost::buffers::size_tag</class>
  <class kind="class">boost::buffers::slice_of</class>
  <class kind="class">boost::buffers::slice_tag</class>
  <class kind="class">boost::buffers::slice_how</class>
  <class kind="class">boost::buffers::tag_invoke</class>
  <class kind="class">boost::buffers::begin</class>
  <class kind="class">boost::buffers::end</class>
  <class kind="class">boost::buffers::keep_back</class>
  <class kind="class">boost::buffers::keep_front</class>
  <class kind="class">boost::buffers::range</class>
  <class kind="class">boost::buffers::size</class>
  <class kind="class">boost::buffers::trim_back</class>
  <class kind="class">boost::buffers::trim_front</class>
</compound>
<compound kind="class">
  <name>boost::buffers::slice_type</name>
  <filename>boost/buffers/slice_type.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::void_t</name>
  <filename>boost/buffers/void_t.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-0c.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-0d6.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-05d.adoc</filename>
  <member kind="function">
    <type>std::size_t</type>
    <name>operator()</name>
    <anchorfile>boost/buffers/_01record-05d/operator_call.adoc</anchorfile>
    <anchor/>
    <arglist>(const ConstBufferSequence&amp; bs)</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-0d2.adoc</filename>
  <member kind="function">
    <type>void</type>
    <name>operator()</name>
    <anchorfile>boost/buffers/_01record-0d2/operator_call.adoc</anchorfile>
    <anchor/>
    <arglist>(BufferSequence&amp; bs, std::size_t n)</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-00.adoc</filename>
  <member kind="function">
    <type>void</type>
    <name>operator()</name>
    <anchorfile>boost/buffers/_01record-00/operator_call.adoc</anchorfile>
    <anchor/>
    <arglist>(BufferSequence&amp; bs, std::size_t n)</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-08.adoc</filename>
  <member kind="function">
    <type>void</type>
    <name>operator()</name>
    <anchorfile>boost/buffers/_01record-08/operator_call.adoc</anchorfile>
    <anchor/>
    <arglist>(BufferSequence&amp; bs, std::size_t n)</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::&lt;unnamed record&gt;</name>
  <filename>boost/buffers/_01record-051.adoc</filename>
  <member kind="function">
    <type>void</type>
    <name>operator()</name>
    <anchorfile>boost/buffers/_01record-051/operator_call.adoc</anchorfile>
    <anchor/>
    <arglist>(BufferSequence&amp; bs, std::size_t n)</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::circular_buffer</name>
  <filename>boost/buffers/circular_buffer.adoc</filename>
  <member kind="function">
    <type>circular_buffer&amp;</type>
    <name>operator=</name>
    <anchorfile>boost/buffers/circular_buffer/operator_assign.adoc</anchorfile>
    <anchor/>
    <arglist>(const circular_buffer&amp; other)</arglist>
  </member>
  <member kind="function">
    <type>std::size_t</type>
    <name>capacity</name>
    <anchorfile>boost/buffers/circular_buffer/capacity.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>void</type>
    <name>commit</name>
    <anchorfile>boost/buffers/circular_buffer/commit.adoc</anchorfile>
    <anchor/>
    <arglist>(std::size_t n)</arglist>
  </member>
  <member kind="function">
    <type>void</type>
    <name>consume</name>
    <anchorfile>boost/buffers/circular_buffer/consume.adoc</anchorfile>
    <anchor/>
    <arglist>(std::size_t n)</arglist>
  </member>
  <member kind="function">
    <type>const_buffers_type</type>
    <name>data</name>
    <anchorfile>boost/buffers/circular_buffer/data.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>std::size_t</type>
    <name>max_size</name>
    <anchorfile>boost/buffers/circular_buffer/max_size.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>mutable_buffers_type</type>
    <name>prepare</name>
    <anchorfile>boost/buffers/circular_buffer/prepare.adoc</anchorfile>
    <anchor/>
    <arglist>(std::size_t n)</arglist>
  </member>
  <member kind="function">
    <type>std::size_t</type>
    <name>size</name>
    <anchorfile>boost/buffers/circular_buffer/size.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::const_buffer</name>
  <filename>boost/buffers/const_buffer.adoc</filename>
  <member kind="function">
    <type>const_buffer&amp;</type>
    <name>operator=</name>
    <anchorfile>boost/buffers/const_buffer/operator_assign.adoc</anchorfile>
    <anchor/>
    <arglist>(const const_buffer&amp; other)</arglist>
  </member>
  <member kind="function">
    <type>const void*</type>
    <name>data</name>
    <anchorfile>boost/buffers/const_buffer/data.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>const_buffer&amp;</type>
    <name>operator+=</name>
    <anchorfile>boost/buffers/const_buffer/operator_plus_eq.adoc</anchorfile>
    <anchor/>
    <arglist>(std::size_t n)</arglist>
  </member>
  <member kind="function">
    <type>std::size_t</type>
    <name>size</name>
    <anchorfile>boost/buffers/const_buffer/size.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>T</type>
    <name>operator </name>
    <anchorfile>boost/buffers/const_buffer/2conversion.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::const_buffer_pair</name>
  <filename>boost/buffers/const_buffer_pair.adoc</filename>
  <member kind="function">
    <type>const_iterator</type>
    <name>begin</name>
    <anchorfile>boost/buffers/const_buffer_pair/begin.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>const_iterator</type>
    <name>end</name>
    <anchorfile>boost/buffers/const_buffer_pair/end.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-034.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-035.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-05.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-0c3.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-039.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-0c2.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_const_buffer_sequence</name>
  <filename>boost/buffers/is_const_buffer_sequence-01.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_mutable_buffer_sequence</name>
  <filename>boost/buffers/is_mutable_buffer_sequence-07.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_mutable_buffer_sequence</name>
  <filename>boost/buffers/is_mutable_buffer_sequence-0e.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_mutable_buffer_sequence</name>
  <filename>boost/buffers/is_mutable_buffer_sequence-02.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_mutable_buffer_sequence</name>
  <filename>boost/buffers/is_mutable_buffer_sequence-06.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_mutable_buffer_sequence</name>
  <filename>boost/buffers/is_mutable_buffer_sequence-01.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::is_mutable_buffer_sequence</name>
  <filename>boost/buffers/is_mutable_buffer_sequence-04.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::make_void</name>
  <filename>boost/buffers/make_void.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::mutable_buffer</name>
  <filename>boost/buffers/mutable_buffer.adoc</filename>
  <member kind="function">
    <type>mutable_buffer&amp;</type>
    <name>operator=</name>
    <anchorfile>boost/buffers/mutable_buffer/operator_assign.adoc</anchorfile>
    <anchor/>
    <arglist>(const mutable_buffer&amp; other)</arglist>
  </member>
  <member kind="function">
    <type>void*</type>
    <name>data</name>
    <anchorfile>boost/buffers/mutable_buffer/data.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>mutable_buffer&amp;</type>
    <name>operator+=</name>
    <anchorfile>boost/buffers/mutable_buffer/operator_plus_eq.adoc</anchorfile>
    <anchor/>
    <arglist>(std::size_t n)</arglist>
  </member>
  <member kind="function">
    <type>std::size_t</type>
    <name>size</name>
    <anchorfile>boost/buffers/mutable_buffer/size.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>T</type>
    <name>operator </name>
    <anchorfile>boost/buffers/mutable_buffer/2conversion.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::mutable_buffer_pair</name>
  <filename>boost/buffers/mutable_buffer_pair.adoc</filename>
  <member kind="function">
    <type>mutable_buffer_pair&amp;</type>
    <name>operator=</name>
    <anchorfile>boost/buffers/mutable_buffer_pair/operator_assign.adoc</anchorfile>
    <anchor/>
    <arglist>(const mutable_buffer_pair&amp; other)</arglist>
  </member>
  <member kind="function">
    <type>const_iterator</type>
    <name>begin</name>
    <anchorfile>boost/buffers/mutable_buffer_pair/begin.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>const_iterator</type>
    <name>end</name>
    <anchorfile>boost/buffers/mutable_buffer_pair/end.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::size_tag</name>
  <filename>boost/buffers/size_tag.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::slice_of</name>
  <filename>boost/buffers/slice_of.adoc</filename>
  <member kind="function">
    <type>const_iterator</type>
    <name>begin</name>
    <anchorfile>boost/buffers/slice_of/begin.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
  <member kind="function">
    <type>const_iterator</type>
    <name>end</name>
    <anchorfile>boost/buffers/slice_of/end.adoc</anchorfile>
    <anchor/>
    <arglist>()</arglist>
  </member>
</compound>
<compound kind="class">
  <name>boost::buffers::slice_tag</name>
  <filename>boost/buffers/slice_tag.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::slice_how</name>
  <filename>boost/buffers/slice_how.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::tag_invoke</name>
  <filename>boost/buffers/tag_invoke-0ad.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::begin</name>
  <filename>boost/buffers/begin.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::end</name>
  <filename>boost/buffers/end.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::keep_back</name>
  <filename>boost/buffers/keep_back.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::keep_front</name>
  <filename>boost/buffers/keep_front.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::range</name>
  <filename>boost/buffers/range.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::size</name>
  <filename>boost/buffers/size.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::trim_back</name>
  <filename>boost/buffers/trim_back.adoc</filename>
</compound>
<compound kind="class">
  <name>boost::buffers::trim_front</name>
  <filename>boost/buffers/trim_front.adoc</filename>
</compound>
</tagfile>
